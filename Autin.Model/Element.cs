// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Autin.Model;
//
//    var element = Element.FromJson(jsonString);

namespace Autin.Model
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Element
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("element_id")]
        public string ElementId { get; set; }

        [JsonProperty("element_type")]
        public string ElementType { get; set; }

        [JsonProperty("element_description")]
        public string ElementDescription { get; set; }

        [JsonProperty("element_fullpath")]
        public string ElementFullpath { get; set; }

        [JsonProperty("station")]
        public string Station { get; set; }

        [JsonProperty("station_id")]
        public string StationId { get; set; }

        [JsonProperty("participant")]
        public string Participant { get; set; }

        [JsonProperty("participant_id")]
        public string ParticipantId { get; set; }

        [JsonProperty("corporation")]
        public string Corporation { get; set; }

        [JsonProperty("corporation_id")]
        public string CorporationId { get; set; }

        [JsonProperty("area")]
        public string Area { get; set; }

        [JsonProperty("area_id")]
        public string AreaId { get; set; }

        [JsonProperty("client_id")]
        public long ClientId { get; set; }

        [JsonProperty("case_id")]
        public string CaseId { get; set; }
    }

    public partial class Element
    {
        public static List<Element> FromJson(string json) => JsonConvert.DeserializeObject<List<Element>>(json, Autin.Model.ElementConverter.Settings);
    }

    public static class ElementSerialize
    {
        public static string ToJson(this List<Element> self) => JsonConvert.SerializeObject(self, Autin.Model.ElementConverter.Settings);
    }

    internal static class ElementConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
