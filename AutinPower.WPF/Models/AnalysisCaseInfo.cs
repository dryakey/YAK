// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Autin.Model;
//
//    var analysisCaseInfo = AnalysisCaseInfo.FromJson(jsonString);

namespace AutinPower.WPF.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Autin.Model;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AnalysisCaseInfo : IAutinDataModel
    {
        public string Key { get; set; }
        public DateTimeOffset DataDate { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("case_id")]
        public string CaseId { get; set; }

        [JsonProperty("client_id")]
        public long ClientId { get; set; }

        [JsonProperty("settlement_date")]
        public DateTimeOffset SettlementDate { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class AnalysisCaseInfo
    {
        public static List<AnalysisCaseInfo> FromJson(string json) => JsonConvert.DeserializeObject<List<AnalysisCaseInfo>>(json, AutinPower.WPF.Models.AnalysisCaseInfoConverter.Settings);
    }

    public static class AnalysisCaseInfoSerialize
    {
        public static string ToJson(this List<AnalysisCaseInfo> self) => JsonConvert.SerializeObject(self, AutinPower.WPF.Models.AnalysisCaseInfoConverter.Settings);
    }

    internal static class AnalysisCaseInfoConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
