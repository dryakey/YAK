// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AutinPower.WPF.Models;
//
//    var informationConfigModel = InformationConfigModel.FromJson(jsonString);

namespace AutinPower.WPF.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using Autin.Model;

    public partial class InformationConfigModel : IAutinDataModel
    {
        public string Key { get; set; }
        public DateTimeOffset DataDate { get; set; }

        [JsonProperty("settlement_date")]
        public DateTimeOffset SettlementDate { get; set; }

        [JsonProperty("user_id")]
        public long UserId { get; set; }

        [JsonProperty("client_token")]
        public string ClientToken { get; set; }

        [JsonProperty("lookup_date")]
        public DateTimeOffset LookupDate { get; set; }

        [JsonProperty("lookup_user")]
        public string LookupUser { get; set; }

        [JsonProperty("load_predict")]
        public List<LoadPredict> LoadPredict { get; set; }
    }

    public partial class LoadPredict
    {
        [JsonProperty("period_id")]
        public string PeriodId { get; set; }

        [JsonProperty("running_date")]
        public DateTimeOffset RunningDate { get; set; }

        [JsonProperty("tune_time_period")]
        public string TuneTimePeriod { get; set; }

        [JsonProperty("load")]
        public long Load { get; set; }
    }

    public partial class InformationConfigModel
    {
        public static InformationConfigModel FromJson(string json) => JsonConvert.DeserializeObject<InformationConfigModel>(json, AutinPower.WPF.Models.InformationConfigModelConverter.Settings);
    }

    public static class InformationConfigModelSerialize
    {
        public static string ToJson(this InformationConfigModel self) => JsonConvert.SerializeObject(self, AutinPower.WPF.Models.InformationConfigModelConverter.Settings);
    }

    internal static class InformationConfigModelConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
